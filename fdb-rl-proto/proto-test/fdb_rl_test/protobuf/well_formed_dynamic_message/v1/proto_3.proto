syntax = "proto3";

package fdb_rl_test.protobuf.well_formed_dynamic_message.v1;

import "fdb_rl/field/v1/field.proto";

message WktV1UuidOptional {
  optional fdb_rl.field.v1.UUID optional_field = 1;
  optional string hello = 2;
}

message WktV1UuidRepeated {
  repeated fdb_rl.field.v1.UUID repeated_field = 1;
  optional string hello = 2;
}

message WktV1UuidMap {
  map<string, fdb_rl.field.v1.UUID> map_field = 1;
  optional string hello = 2;
}

message WktV1UuidNestedInner {
  optional fdb_rl.field.v1.UUID optional_field = 1;
  optional string world = 2;
}

message WktV1UuidNestedOuter {
  optional WktV1UuidNestedInner nested_inner = 1;
  optional string hello = 2;
}

message WktV1UuidRecursiveInner {
  optional WktV1UuidRecursiveOuter recursive_outer = 1;
  optional fdb_rl.field.v1.UUID optional_field = 2;
}

message WktV1UuidRecursiveOuter {
  optional WktV1UuidRecursiveInner recursive_inner = 1;
  optional fdb_rl.field.v1.UUID optional_field = 2;
}

message WktV1UuidOneof {
  optional string hello = 1;

  oneof wkt_v1_uuid_oneof {
    fdb_rl.field.v1.UUID uuid_field = 2;
    string world = 3;
  }
}

message Empty {}

message HelloWorldDouble {
  optional double hello = 1;
  optional double world = 2;
}

message HelloWorldFloat {
  optional float hello = 1;
  optional float world = 2;
}

message HelloWorldInt32 {
  optional int32 hello = 1;
  optional int32 world = 2;
}

message HelloWorldInt64 {
  optional int64 hello = 1;
  optional int64 world = 2;
}

message HelloWorldSint32 {
  optional sint32 hello = 1;
  optional sint32 world = 2;
}

message HelloWorldSint64 {
  optional sint64 hello = 1;
  optional sint64 world = 2;
}

message HelloWorldSfixed32 {
  optional sfixed32 hello = 1;
  optional sfixed32 world = 2;
}

message HelloWorldSfixed64 {
  optional sfixed64 hello = 1;
  optional sfixed64 world = 2;
}

message HelloWorldBool {
  optional bool hello = 1;
  optional bool world = 2;
}

message HelloWorldString {
  optional string hello = 1;
  optional string world = 2;
}

message HelloWorldBytes {
  optional bytes hello = 1;
  optional bytes world = 2;
}

message HelloWorldEnum {
  enum Size {
    SIZE_UNSPECIFIED = 0;
    SIZE_SMALL = 1;
    SIZE_MEDIUM = 2;
    SIZE_LARGE = 3;
  }
  optional Size hello = 1;
  optional Size world = 2;
}

message HelloWorldOneof {
  optional string some_field = 1;

  oneof hello_world {
    string hello = 2;
    int64 world = 3;
  }
}

message HelloWorldWktV1Uuid {
  optional fdb_rl.field.v1.UUID primary_key = 1;
  optional string hello = 2;
  optional string world = 3;
}
