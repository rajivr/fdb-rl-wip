syntax = "proto3";

package fdb_rl_test.protobuf.well_formed_dynamic_message.v1;

import "fdb_rl/field/v1/field.proto";

message WktV1UuidOptional {
  optional fdb_rl.field.v1.UUID optional_field = 1;
  optional string hello = 2;
}

message WktV1UuidRepeated {
  repeated fdb_rl.field.v1.UUID repeated_field = 1;
  optional string hello = 2;
}

message WktV1UuidMap {
  map<string, fdb_rl.field.v1.UUID> map_field = 1;
  optional string hello = 2;
}

message WktV1UuidNestedInner {
  optional fdb_rl.field.v1.UUID optional_field = 1;
  optional string world = 2;
}

message WktV1UuidNestedOuter {
  optional WktV1UuidNestedInner nested_inner = 1;
  optional string hello = 2;
}

message WktV1UuidRecursiveInner {
  optional WktV1UuidRecursiveOuter recursive_outer = 1;
  optional fdb_rl.field.v1.UUID optional_field = 2;
}

message WktV1UuidRecursiveOuter {
  optional WktV1UuidRecursiveInner recursive_inner = 1;
  optional fdb_rl.field.v1.UUID optional_field = 2;
}

message WktV1UuidOneof {
  optional string hello = 1;

  oneof wkt_v1_uuid_oneof {
    fdb_rl.field.v1.UUID uuid_field = 2;
    string world = 3;
  }
}

message Empty {}

message HelloWorldDouble {
  optional double hello = 1;
  optional double world = 2;
}

message HelloWorldFloat {
  optional float hello = 1;
  optional float world = 2;
}

message HelloWorldInt32 {
  optional int32 hello = 1;
  optional int32 world = 2;
}

message HelloWorldInt64 {
  optional int64 hello = 1;
  optional int64 world = 2;
}

message HelloWorldSint32 {
  optional sint32 hello = 1;
  optional sint32 world = 2;
}

message HelloWorldSint64 {
  optional sint64 hello = 1;
  optional sint64 world = 2;
}

message HelloWorldSfixed32 {
  optional sfixed32 hello = 1;
  optional sfixed32 world = 2;
}

message HelloWorldSfixed64 {
  optional sfixed64 hello = 1;
  optional sfixed64 world = 2;
}

message HelloWorldBool {
  optional bool hello = 1;
  optional bool world = 2;
}

message HelloWorldString {
  optional string hello = 1;
  optional string world = 2;
}

message HelloWorldBytes {
  optional bytes hello = 1;
  optional bytes world = 2;
}

message HelloWorldEnum {
  enum Size {
    SIZE_UNSPECIFIED = 0;
    SIZE_SMALL = 1;
    SIZE_MEDIUM = 2;
    SIZE_LARGE = 3;
  }
  optional Size hello = 1;
  optional Size world = 2;
}

message HelloWorldOneof {
  optional string some_field = 1;

  oneof hello_world {
    string hello = 2;
    int64 world = 3;
  }
}

message HelloWorldWktV1Uuid {
  optional fdb_rl.field.v1.UUID primary_key = 1;
  optional string hello = 2;
  optional string world = 3;
}

message HelloWorldNestedInner {
  optional string world = 1;
}

message HelloWorldNestedOuter {
  optional HelloWorldNestedInner nested_inner = 1;
  optional string hello = 2;
}

message HelloWorldMap {
  enum Size {
    SIZE_UNSPECIFIED = 0;
    SIZE_SMALL = 1;
    SIZE_MEDIUM = 2;
  }

  map<string, double> field_double = 1;
  map<string, float> field_float = 2;
  map<string, int32> field_int32 = 3;
  map<string, int64> field_int64 = 4;
  map<string, sint32> field_sint32 = 5;
  map<string, sint64> field_sint64 = 6;
  map<string, sfixed32> field_sfixed32 = 7;
  map<string, sfixed64> field_sfixed64 = 8;
  map<string, bool> field_bool = 9;
  map<string, string> field_string = 10;
  map<string, bytes> field_bytes = 11;
  map<string, Size> field_enum = 12;
  map<string, HelloWorldString> field_message = 13;
  map<string, fdb_rl.field.v1.UUID> field_message_wkt_v1_uuid = 14;
}

message HelloWorldRepeated {
  enum Size {
    SIZE_UNSPECIFIED = 0;
    SIZE_SMALL = 1;
  }

  repeated double field_double = 1;
  repeated float field_float = 2;
  repeated int32 field_int32 = 3;
  repeated int64 field_int64 = 4;
  repeated sint32 field_sint32 = 5;
  repeated sint64 field_sint64 = 6;
  repeated sfixed32 field_sfixed32 = 7;
  repeated sfixed64 field_sfixed64 = 8;
  repeated bool field_bool = 9;
  repeated string field_string = 10;
  repeated bytes field_bytes = 11;
  repeated Size field_enum = 12;
  repeated HelloWorldString field_message = 13;
  repeated fdb_rl.field.v1.UUID field_message_wkt_v1_uuid = 14;
}
